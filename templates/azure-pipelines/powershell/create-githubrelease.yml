steps:
- powershell: |
    $ErrorActionPreference = 'Stop'
    $VerbosePreference = 'Continue'
    Set-StrictMode -Version Latest
    Import-Module .\build\PSRepositoryReleaseManager\src\PSRepositoryReleaseManager\PSRepositoryReleaseManager.psm1
    Import-Module .\build\PSRepositoryReleaseManager\lib\PSGitHubRestApi\src\PSGitHubRestApi\PSGitHubRestApi.psm1
    $private:releaseArgs = @{
        Namespace = $env:RELEASE_NAMESPACE
        Repository = $env:RELEASE_REPOSITORY
        ApiKey = $env:GITHUB_API_TOKEN
        TagName = $env:RELEASE_TAG_REF
        TargetCommitish = git rev-parse $env:RELEASE_TAG_REF
        Name = $env:RELEASE_TAG_REF
        Body = Get-Content (if ($env:RELEASE_NOTES_PATH) { $env:RELEASE_NOTES_PATH } else { "$(git rev-parse --show-toplevel)\.release-notes.md" }) -Raw
        Draft = $false
        Prerelease = $false
    }
    New-GitHubRepositoryRelease @releaseArgs > $null
  displayName: Create GitHub release
  condition: and(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), ne(variables['RELEASE_TAG_REF'], ''))
  env:
    GITHUB_API_TOKEN: $(GITHUB_API_TOKEN)
