steps:
- powershell: |
    $ErrorActionPreference = 'Stop'
    ### Begin CI-specific code: Get the namspace, project name, and tag ref
    $matchInfo = $env:BUILD_SOURCEBRANCH | Select-String -Pattern '^refs\/tags\/(.*)'
    $tagRef = if ($matchInfo) { $matchInfo.Matches.Groups[1].Value } else { $null }
    $matchInfo = $env:BUILD_REPOSITORY_URI | Select-String -Pattern '^https:\/\/github.com\/(.*?)\/(.*)'
    $namespace = if ($matchInfo) { $matchInfo.Matches.Groups[1].Value } else { $null }
    $repository = if ($matchInfo) { $matchInfo.Matches.Groups[2].Value } else { $null }
    ### End of CI-specific code
    "Namespace: '$namespace'" | Write-Host
    "Repository: '$repository'" | Write-Host
    "Tag ref: '$tagRef'" | Write-Host
    $matchInfo = $tagRef | Select-String -Pattern '^v\d+\.\d+\.\d+$'
    $releaseTagRef = if ($matchInfo) { $matchInfo.Matches.Groups[0].Value } else { $null }
    if (!$releaseTagRef) {
        throw "The tag ref is invalid for a release." | Write-Host
    }else {
        "The tag ref is valid for a release." | Write-Host
    }
    ### Begin CI-specific code: Set job-scoped variables
    echo "##vso[task.setvariable variable=RELEASE_TAG_REF]${releaseTagRef}"
    echo "##vso[task.setvariable variable=RELEASE_NAMESPACE]${namespace}"
    echo "##vso[task.setvariable variable=RELEASE_REPOSITORY]${repository}"
    ### End of CI-specific code
  displayName: Process release variables
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
