steps:
- pwsh: |
    $ErrorActionPreference = 'Stop'
    Set-StrictMode -Version Latest
    ### Begin CI-specific code: Get the namspace and project name
    $matchInfo = $env:BUILD_SOURCEBRANCH | Select-String -Pattern '^refs\/tags\/(.*)'
    $commitTag = if ($matchInfo) { $matchInfo.Matches.Groups[1].Value } else { $null }
    $matchInfo = $env:BUILD_REPOSITORY_URI | Select-String -Pattern '^https:\/\/github.com\/(.*?)\/(.*)'
    $namespace = if ($matchInfo) { $matchInfo.Matches.Groups[1].Value } else { $null }
    $repository = if ($matchInfo) { $matchInfo.Matches.Groups[2].Value } else { $null }
    ### End of CI-specific code
    Import-Module .\build\PSGitHubRestApi\src\PSGitHubRestApi\PSGitHubRestApi.psm1
    Import-Module .\build\PSGitHubRepositoryReleaser\src\PSGitHubRepositoryReleaser\PSGitHubRepositoryReleaser.psm1
    $previousReleaseTag = Get-RepositoryPreviousRelease -Path $(Get-Location) -Verbose
    $changeLog = Get-RepositoryChangeLog -Path $(Get-Location) -FirstRef $previousReleaseTag -Verbose
    $releaseBody = @"
    \# Changelog

    \## $commitTag ($(Get-Date -UFormat '%Y-%m-%d'))

    $changeLog
    "@
    New-GHRelease -Namespace $namespace -Repository $repository -TagName $commitTag -ReleaseBody $releaseBody -ApiKey $env:GITHUB_API_KEY -Verbose > $null
  displayName: Create GitHub Release
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  env:
    GITHUB_API_KEY: $(GITHUB_API_KEY)
