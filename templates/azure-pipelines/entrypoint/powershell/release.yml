parameters:
  NAME: ''
  NOTES_PATH: ''
  NOTES_CONTENT: ''
  DRAFT: ''
  PRERELEASE: ''
  ASSETS: ''

steps:
- powershell: |
    $ErrorActionPreference = 'Stop'
    $ErrorView = 'NormalView'
    ### Begin CI-specific code: Get the namspace, project name, and tag ref
    $matchInfo = $env:BUILD_SOURCEBRANCH | Select-String -Pattern '^refs\/tags\/(.*)'
    $env:RELEASE_TAG_REF = if ($matchInfo) { $matchInfo.Matches.Groups[1].Value } else { $null }
    $matchInfo = $env:BUILD_REPOSITORY_URI | Select-String -Pattern '^https:\/\/github.com\/(.*?)\/(.*)'
    $env:RELEASE_NAMESPACE = if ($matchInfo) { $matchInfo.Matches.Groups[1].Value } else { $null }
    $env:RELEASE_REPOSITORY = if ($matchInfo) { $matchInfo.Matches.Groups[2].Value } else { $null }
    ### End of CI-specific code
    "Namespace: '$env:RELEASE_NAMESPACE'" | Write-Host
    "Repository: '$env:RELEASE_REPOSITORY'" | Write-Host
    "Tag ref: '$env:RELEASE_TAG_REF'" | Write-Host
    $private:releaseArgs = @{
        Namespace = $env:RELEASE_NAMESPACE
        Repository = $env:RELEASE_REPOSITORY
        ApiKey = $env:GITHUB_API_TOKEN
    }
    if ($env:RELEASE_TAG_REF) { $private:releaseArgs['TagName'] = $env:RELEASE_TAG_REF }
    if ($env:RELEASE_NAME) { $private:releaseArgs['Name'] = $env:RELEASE_NAME }
    if ($env:RELEASE_NOTES_PATH) { $private:releaseArgs['ReleaseNotesPath'] = $env:RELEASE_NOTES_PATH }
    elseif ($env:RELEASE_NOTES_CONTENT) { $private:releaseArgs['ReleaseNotesContent'] = $env:RELEASE_NOTES_CONTENT }
    if ($env:RELEASE_DRAFT) { $private:releaseArgs['Draft'] = [System.Convert]::ToBoolean($env:RELEASE_DRAFT) }
    if ($env:RELEASE_PRERELEASE) { $private:releaseArgs['Prerelease'] = [System.Convert]::ToBoolean($env:RELEASE_PRERELEASE) }
    if ($env:RELEASE_ASSETS) { $private:releaseArgs['Asset'] = $env:RELEASE_ASSETS }
    $VerbosePreference = 'Continue'
    .\build\PSRepositoryReleaseManager\src\scripts\ci\Invoke-Release.ps1 @private:releaseArgs > $null
  displayName: Create GitHub release
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  env:
    GITHUB_API_TOKEN: $(GITHUB_API_TOKEN)
    RELEASE_NAME: ${{ parameters['NAME'] }}
    RELEASE_NOTES_PATH: ${{ parameters['NOTES_PATH'] }}
    RELEASE_NOTES_CONTENT: ${{ parameters['NOTES_CONTENT'] }}
    RELEASE_DRAFT: ${{ parameters['DRAFT'] }}
    RELEASE_PRERELEASE: ${{ parameters['PRERELEASE'] }}
    RELEASE_ASSETS: ${{ parameters['ASSETS'] }}
