parameters:
  RELEASE_NAME: ''
  RELEASE_NOTES_PATH: ''
  RELEASE_NOTES_CONTENT: ''
  RELEASE_DRAFT: ''
  RELEASE_PRERELEASE: ''
  RELEASE_ASSETS: ''

steps:
- pwsh: |
    $ErrorActionPreference = 'Stop'
    $ErrorView = 'NormalView'
    ### Begin CI-specific code: Get the namspace, project name, and tag ref
    $matchInfo = $env:BUILD_SOURCEBRANCH | Select-String -Pattern '^refs\/tags\/(.*)'
    $env:RELEASE_TAG_REF = if ($matchInfo) { $matchInfo.Matches.Groups[1].Value } else { $null }
    $matchInfo = $env:BUILD_REPOSITORY_URI | Select-String -Pattern '^https:\/\/github.com\/(.*?)\/(.*)'
    $env:RELEASE_NAMESPACE = if ($matchInfo) { $matchInfo.Matches.Groups[1].Value } else { $null }
    $env:RELEASE_REPOSITORY = if ($matchInfo) { $matchInfo.Matches.Groups[2].Value } else { $null }
    ### End of CI-specific code
    $VerbosePreference = 'Continue'
    .\build\PSRepositoryReleaseManager\src\scripts\ci\Invoke-Release.ps1 > $null
  displayName: Create GitHub release
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  env:
    GITHUB_API_TOKEN: $(GITHUB_API_TOKEN)
    RELEASE_NAME: ${{ parameters['RELEASE_NAME'] }}
    RELEASE_NOTES_PATH: ${{ parameters['RELEASE_NOTES_PATH'] }}
    RELEASE_NOTES_CONTENT: ${{ parameters['RELEASE_NOTES_CONTENT'] }}
    RELEASE_DRAFT: ${{ parameters['RELEASE_DRAFT'] }}
    RELEASE_PRERELEASE: ${{ parameters['RELEASE_PRERELEASE'] }}
    RELEASE_ASSETS: ${{ parameters['RELEASE_ASSETS'] }}
